/*
已知rand()可均匀生成[1,2]随机数，想均匀生成[1,4]的随机数。  
rand2() + rand2() = ? ==> [2,4]
   1    +   1     = 2
   1    +   2     = 3
   2    +   1     = 3
   2    +   2     = 4

// 为了把生成随机数的范围规约成[1,n]，于是在上一步的结果后减1
(rand2()-1) + rand2() = ? ==> [1,3]
   0       +   1     = 1
   0       +   2     = 2
   1       +   1     = 2
   1       +   2     = 3
概率不等，2概率50%。

(rand2()-1) × 2 + rand2() = ? ==> [1,3]
   0            +   1     = 1
   0            +   2     = 2
   2            +   1     = 3
   2            +   2     = 4
--------------------------------
已知 rand_N() 可以等概率的生成[1, N]范围的随机数
那么：
(rand_X() - 1) × Y + rand_Y() ==> 可以等概率的生成[1, X * Y]范围的随机数
即实现了 rand_XY()
-----------------------------------------
那么想到通过rand4()来实现rand2()呢？这个就很简单了，
已知rand4()会均匀产生[1,4]的随机数，通过取余，再加1就可以了。
---------------------------------
要实现rand10()，就需要先实现rand_N()，并且保证N大于10且是10的倍数。
这样再通过rand_N() % 10 + 1 就可以得到[1,10]范围的随机数了。
rand7()-1) × 7 + rand7()  ==> rand49()
----------------------------
*/
#include <iostream>
#include <random>
using namespace std;
int rand7() { return rand() % 7 + 1; }

int rand10() {
  while (true) {
    int num = (rand7() - 1) * 7 + rand7();
    if (num <= 40) // 1 -- 40
      return num % 10 + 1;
  }
}

int main() {}

